# -*- mode: yaml -*-
# This example configuration provides basic automations to get started with gitStream.
# View the gitStream quickstart for more examples: https://docs.gitstream.cm/examples/
#
# GitStream Control Tags:
# - Add [gitstream_on] to PR description to enable automatic AI review and description on PR creation
# - Add [gitstream_review] to PR description to request AI review on next commit
# - Add [gitstream_describe] to PR description to request AI description update on next commit
#
# This prevents gitstream from spamming PRs with comments on every commit while still allowing
# users to control when they want AI assistance.

manifest:
  version: 1.0


automations:
  # Use LinearB's AI service to review the changes
  linearb_ai_review:
    on:
      - pr_created
    if:
      - {{ not pr.draft }}
      - {{ not is.bot }}
      - {{ has.gitstream_on }}
      - {{ not has.gitstream_reviewed }}
    run:
      - action: code-review@v1
        args:
          approve_on_LGTM: {{ calc.safe_changes }}

  # Use LinearB's AI service to add a description to the PR
  linearb_ai_description:
    on:
      - pr_created
    if:
      - {{ not pr.draft }}
      - {{ not is.bot }}
      - {{ has.gitstream_on }}
      - {{ not has.gitstream_described }}
    run:
      - action: describe-changes@v1
        args:
          concat_mode: append

  # Manual trigger for AI review on existing PRs
  manual_ai_review:
    on:
      - commit
    if:
      - {{ not pr.draft }}
      - {{ not is.bot }}
      - {{ has.gitstream_review_requested }}
      - {{ not has.gitstream_reviewed_in_last_commits }}
    run:
      - action: code-review@v1
        args:
          approve_on_LGTM: {{ calc.safe_changes }}

  # Manual trigger for AI description on existing PRs
  manual_ai_description:
    on:
      - commit
    if:
      - {{ not pr.draft }}
      - {{ not is.bot }}
      - {{ has.gitstream_description_requested }}
      - {{ not has.gitstream_described_in_last_commits }}
    run:
      - action: describe-changes@v1
        args:
          concat_mode: append

  # Add a label indicating how long it will take to review the PR.
  estimated_time_to_review:
    if:
      - {{ has.gitstream_on }}
    run:
      - action: add-label@v1
        args:
          label: "{{ calc.etr }} min review"
          color: {{ colors.red if (calc.etr >= 20) else ( colors.yellow if (calc.etr >= 5) else colors.green ) }}
  # Inform PR authors when they fail to reference Jira tickets in the PR title or description.
  label_missing_jira_info:
    if:
      - {{ not (has.jira_ticket_in_title or has.jira_ticket_in_desc) }}
    run:
      - action: add-label@v1
        args:
          label: "missing-jira"
          color: {{ colors.red }}
      - action: add-comment@v1
        args:
          comment: |
            This PR is missing a Jira ticket reference in the title or description.
            Please add a Jira ticket reference to the title or description of this PR.


# +----------------------------------------------------------------------------+
# | Custom Expressions                                                         |
# | https://docs.gitstream.cm/how-it-works/#custom-expressions                 |
# +----------------------------------------------------------------------------+

calc:
  etr: {{ branch | estimatedReviewTime }}
  safe_changes: {{ is.formatting or is.docs or is.tests or is.image }}

has:
  jira_ticket_in_title: {{ pr.title | includes(regex=r/\b[A-Za-z]+-\d+\b/) }}
  jira_ticket_in_desc: {{ pr.description | includes(regex=r/atlassian.net\/browse\/\w{1,}-\d{3,4}/) }}
  gitstream_on: {{ pr.description | includes('[gitstream_on]') }}
  gitstream_review_requested: {{ pr.description | includes('[gitstream_review]') }}
  gitstream_description_requested: {{ pr.description | includes('[gitstream_describe]') }}
  gitstream_reviewed: {{ pr.comments | match(attr='author', list=['github-actions', 'linearb-ai']) | some }}
  gitstream_described: {{ pr.description | includes('AI Generated Description') or pr.description | includes('<!-- AI DESCRIPTION -->') }}
  gitstream_reviewed_in_last_commits: {{ pr.comments | filter(attr='created_at', regex=r/{{ branch.base.sha | slice(0, 7) }}/) | match(attr='author', list=['github-actions', 'linearb-ai']) | some }}
  gitstream_described_in_last_commits: {{ pr.timeline | filter(attr='event_type', list=['description_changed']) | filter(attr='created_at', regex=r/{{ branch.base.sha | slice(0, 7) }}/) | some }}

colors:
  red: 'b60205'
  yellow: 'fbca04'
  green: '0e8a16'

is:
  formatting: {{ source.diff.files | isFormattingChange }}
  docs: {{ files | allDocs }}
  tests: {{ files | allTests }}
  image: {{ files | allImages }}
  bot: {{ pr.author | match(list=['github-actions', '_bot_', '[bot]', 'dependabot']) | some }}
